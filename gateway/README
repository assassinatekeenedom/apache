A continuous (for UI) development environment; deliver static content directly from your *repository* **instead of** from the *application server*.
# EFFECTS #
 1.  http://localhost/
    +  Becomes a gateway for http://[**domain**]:8080/
    +  **MAN IN THE MIDDLE** delivery of configured static resource requests.
# SETUP #

Designed to be run and managed from the command line.

## Place this repository at **C:\\** and do not change the name. ##
-  **cd C:\\apache\\gateway**
	-  This directory contains all of the scripts needed to operate the gateway.
	-  **If you do have to change the name or location; update the conf/original/httpd.conf file**.

 1.  Run **LOCALHOST.bat** or **.start.bat domain** to turn on the service.
	-  You will automatically be prompted to provide the intercepting repository location.
	-  You will access the service through your browser at http://localhost/
 2.  Quickly change environments or repositories (with **.start.bat** and **setRepo.bat** respectively).
 3.  This setup assumes there is a running application server hosting the target repository (from **setRepo.bat** and **context.bat**) at the target environment's port 8080.
	*  You can run this repository gateway at any time, regardless of the application server state.
	*  You can leave this service running as long as desired if no configurations change.
		* It will always perform its part of the process without causing errors or crashes.
 4.  This setup assumes you're using windows with the following services (on the system's PATH):
	*  java
	*  git (optional, iff svn set)
	*  svn (optional, iff git set)
	*  mvn
 5.  Other assumed to exist pre-configured services
	*  sonar
	*  application server
# START #
 1.  LOCALHOST.bat
 2.  .start.bat **domain**
# MAN IN THE MIDDLE #
 1.  setRepo.bat 
	-  Executed automatically by .start.bat if certain hidden data files are not present.
	-  There are 3 potential paths through this script (all end by setting the **.repo** value):
		1.  Create new repositories in svn and git (it does not exist in either currently).
			- results will be in the folder **gateway**/.build/[branch-name]
		2.  (else) Checkout the repositories from svn and git (already created in both).
			- results will be in the folder **gateway**/.build/[branch-name]
		3.  (else) Provide the full path to a folder of your choice (no SCM check)
	-  The developer should prepare their IDE(s) to point to the file-system location provided (as appropriate).
 2.  contxt.bat
	1.  Adds an intercept context for a URL. 
		-  e.g. /**{context}**/*
	2.  Adds a route for this intercept based on the repository root directory
		-  e.g. /src/main/webapps/js
	3.  Adds a port for the intercept routing, any available ports will do.
		-  e.g. 1337
		
	-  (for) Each time this script is run it appends a new line to the **.static-contexts** file.
		-  delete the file to reset configurations
		-  do not use the same port or the same context more than once.
		-  you can modify this **.static-contexts** file by hand as needed
		-  designed to have a wrapping script initialize all details for a particular configuration.
			- implicating a delete of the current **.static-contexts** file

 3.  .start.bat
	-  Invoked along with the **domain** of the deployed repository code (git or svn).
	-  http://localhost/ now replaces previous use of http://[**domain**]:8080/
	-  The configured repository will be the **live domain** code being executed.